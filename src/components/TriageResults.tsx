import type { Language } from '../App.tsx';

interface TriageResultsProps {
  data: any;
  language: Language;
  onFindServices: () => void;
  onBack: () => void;
}

const translations = {
  en: {
    title: 'Your Health Assessment Results',
    riskLevel: 'Risk Level',
    low: 'Low Risk',
    medium: 'Medium Risk',
    high: 'High Risk',
    recommendations: 'Recommendations',
    nextSteps: 'Next Steps',
    findServices: 'Find Healthcare Services',
    back: 'Back to Assessment',
    lowRiskDesc: 'Your symptoms suggest low risk. Monitor your condition and seek care if symptoms worsen.',
    mediumRiskDesc: 'Your symptoms require attention. Consider visiting a healthcare provider within the next few days.',
    highRiskDesc: 'Your symptoms require immediate attention. Please seek medical care as soon as possible.',
    generalTips: 'General Health Tips',
    tip1: 'Stay hydrated and get adequate rest',
    tip2: 'Take medications as prescribed',
    tip3: 'Monitor your symptoms regularly',
    emergencyNote: 'If you experience severe symptoms, call emergency services immediately.'
  },
  hi: {
    title: '‡§Ü‡§™‡§ï‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§® ‡§ï‡•á ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ',
    riskLevel: '‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§∏‡•ç‡§§‡§∞',
    low: '‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ',
    medium: '‡§Æ‡§ß‡•ç‡§Ø‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ',
    high: '‡§â‡§ö‡•ç‡§ö ‡§ú‡•ã‡§ñ‡§ø‡§Æ',
    recommendations: '‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç',
    nextSteps: '‡§Ö‡§ó‡§≤‡•á ‡§ï‡§¶‡§Æ',
    findServices: '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç ‡§ñ‡•ã‡§ú‡•á‡§Ç',
    back: '‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§® ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç',
    lowRiskDesc: '‡§Ü‡§™‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§ï‡§Æ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡§æ ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§™‡§∞ ‡§®‡§ú‡§º‡§∞ ‡§∞‡§ñ‡•á‡§Ç‡•§',
    mediumRiskDesc: '‡§Ü‡§™‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§™‡§∞ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§®‡•á ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡•Å‡§õ ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•á‡§Ç‡•§',
    highRiskDesc: '‡§Ü‡§™‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡•ã ‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ú‡§≤‡•ç‡§¶ ‡§∏‡•á ‡§ú‡§≤‡•ç‡§¶ ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§∏‡•á‡§µ‡§æ ‡§≤‡•á‡§Ç‡•§',
    generalTips: '‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ',
    tip1: '‡§™‡§æ‡§®‡•Ä ‡§™‡§ø‡§è‡§Ç ‡§î‡§∞ ‡§™‡§∞‡•ç‡§Ø‡§æ‡§™‡•ç‡§§ ‡§Ü‡§∞‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç',
    tip2: '‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§¶‡§µ‡§æ‡§è‡§Ç ‡§≤‡•á‡§Ç',
    tip3: '‡§Ö‡§™‡§®‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡•Ä ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§ï‡§∞‡•á‡§Ç',
    emergencyNote: '‡§Ø‡§¶‡§ø ‡§Ü‡§™ ‡§ó‡§Ç‡§≠‡•Ä‡§∞ ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç, ‡§§‡•ã ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç‡•§'
  },
  ar: {
    title: 'ŸÜÿ™ÿßÿ¶ÿ¨ ÿ™ŸÇŸäŸäŸÖŸÉ ÿßŸÑÿµÿ≠Ÿä',
    riskLevel: 'ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑŸÖÿÆÿßÿ∑ÿ±',
    low: 'ÿÆÿ∑ÿ± ŸÖŸÜÿÆŸÅÿ∂',
    medium: 'ÿÆÿ∑ÿ± ŸÖÿ™Ÿàÿ≥ÿ∑',
    high: 'ÿÆÿ∑ÿ± ÿπÿßŸÑŸä',
    recommendations: 'ÿßŸÑÿ™ŸàÿµŸäÿßÿ™',
    nextSteps: 'ÿßŸÑÿÆÿ∑Ÿàÿßÿ™ ÿßŸÑÿ™ÿßŸÑŸäÿ©',
    findServices: 'ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿµÿ≠Ÿäÿ©',
    back: 'ÿßŸÑÿπŸàÿØÿ© ÿ•ŸÑŸâ ÿßŸÑÿ™ŸÇŸäŸäŸÖ',
    lowRiskDesc: 'ÿ™ÿ¥Ÿäÿ± ÿ£ÿπÿ±ÿßÿ∂ŸÉ ÿ•ŸÑŸâ ÿÆÿ∑ÿ± ŸÖŸÜÿÆŸÅÿ∂. ÿ±ÿßŸÇÿ® ÿ≠ÿßŸÑÿ™ŸÉ Ÿàÿßÿ∑ŸÑÿ® ÿßŸÑÿ±ÿπÿßŸäÿ© ÿ•ÿ∞ÿß ÿ≥ÿßÿ°ÿ™ ÿßŸÑÿ£ÿπÿ±ÿßÿ∂.',
    mediumRiskDesc: 'ÿ™ÿ™ÿ∑ŸÑÿ® ÿ£ÿπÿ±ÿßÿ∂ŸÉ ÿßŸÑÿßŸÜÿ™ÿ®ÿßŸá. ŸÅŸÉÿ± ŸÅŸä ÿ≤Ÿäÿßÿ±ÿ© ŸÖŸÇÿØŸÖ ÿ±ÿπÿßŸäÿ© ÿµÿ≠Ÿäÿ© ÿÆŸÑÿßŸÑ ÿßŸÑÿ£ŸäÿßŸÖ ÿßŸÑŸÇŸÑŸäŸÑÿ© ÿßŸÑŸÇÿßÿØŸÖÿ©.',
    highRiskDesc: 'ÿ™ÿ™ÿ∑ŸÑÿ® ÿ£ÿπÿ±ÿßÿ∂ŸÉ ÿßŸáÿ™ŸÖÿßŸÖÿßŸã ŸÅŸàÿ±ŸäÿßŸã. Ÿäÿ±ÿ¨Ÿâ ÿ∑ŸÑÿ® ÿßŸÑÿ±ÿπÿßŸäÿ© ÿßŸÑÿ∑ÿ®Ÿäÿ© ŸÅŸä ÿ£ŸÇÿ±ÿ® ŸàŸÇÿ™ ŸÖŸÖŸÉŸÜ.',
    generalTips: 'ŸÜÿµÿßÿ¶ÿ≠ ÿµÿ≠Ÿäÿ© ÿπÿßŸÖÿ©',
    tip1: 'ÿ≠ÿßŸÅÿ∏ ÿπŸÑŸâ ÿßŸÑÿ™ÿ±ÿ∑Ÿäÿ® Ÿàÿßÿ≠ÿµŸÑ ÿπŸÑŸâ ÿ±ÿßÿ≠ÿ© ŸÉÿßŸÅŸäÿ©',
    tip2: 'ÿ™ŸÜÿßŸàŸÑ ÿßŸÑÿ£ÿØŸàŸäÿ© ÿ≠ÿ≥ÿ® ÿßŸÑŸàÿµŸÅÿ©',
    tip3: 'ÿ±ÿßŸÇÿ® ÿ£ÿπÿ±ÿßÿ∂ŸÉ ÿ®ÿßŸÜÿ™ÿ∏ÿßŸÖ',
    emergencyNote: 'ÿ•ÿ∞ÿß ŸÉŸÜÿ™ ÿ™ÿπÿßŸÜŸä ŸÖŸÜ ÿ£ÿπÿ±ÿßÿ∂ ÿ¥ÿØŸäÿØÿ©ÿå ÿßÿ™ÿµŸÑ ÿ®ÿÆÿØŸÖÿßÿ™ ÿßŸÑÿ∑Ÿàÿßÿ±ÿ¶ ŸÅŸàÿ±ÿßŸã.'
  },
  bn: {
    title: '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤',
    riskLevel: '‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶æ',
    low: '‡¶ï‡¶Æ ‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø',
    medium: '‡¶Æ‡¶æ‡¶ù‡¶æ‡¶∞‡¶ø ‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø',
    high: '‡¶â‡¶ö‡ßç‡¶ö ‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø',
    recommendations: '‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂',
    nextSteps: '‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶™‡¶¶‡¶ï‡ßç‡¶∑‡ßá‡¶™',
    findServices: '‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø‡¶∏‡ßá‡¶¨‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®',
    back: '‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡ßá ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®',
    lowRiskDesc: '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡¶£‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶ï‡¶Æ ‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø‡¶∞ ‡¶á‡¶ô‡ßç‡¶ó‡¶ø‡¶§ ‡¶¶‡ßá‡¶Ø‡¶º‡•§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ ‡¶™‡¶∞‡ßç‡¶Ø‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§',
    mediumRiskDesc: '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡¶£‡¶ó‡ßÅ‡¶≤‡¶ø‡¶∞ ‡¶¶‡¶ø‡¶ï‡ßá ‡¶Æ‡¶®‡ßã‡¶Ø‡ßã‡¶ó ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡•§ ‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ ‡¶ï‡¶Ø‡¶º‡ßá‡¶ï ‡¶¶‡¶ø‡¶®‡ßá ‡¶è‡¶ï‡¶ú‡¶® ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶ï‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§',
    highRiskDesc: '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡¶£‡¶ó‡ßÅ‡¶≤‡¶ø‡¶∞ ‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï ‡¶Æ‡¶®‡ßã‡¶Ø‡ßã‡¶ó ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡•§ ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ø‡¶§ ‡¶§‡¶æ‡¶°‡¶º‡¶æ‡¶§‡¶æ‡¶°‡¶º‡¶ø ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶®‡¶ø‡¶®‡•§',
    generalTips: '‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂',
    tip1: '‡¶π‡¶æ‡¶á‡¶°‡ßç‡¶∞‡ßá‡¶ü‡ßá‡¶° ‡¶•‡¶æ‡¶ï‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶§ ‡¶¨‡¶ø‡¶∂‡ßç‡¶∞‡¶æ‡¶Æ ‡¶®‡¶ø‡¶®',
    tip2: '‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶ø‡¶§ ‡¶ì‡¶∑‡ßÅ‡¶ß ‡¶∏‡ßá‡¶¨‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®',
    tip3: '‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶ø‡¶§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡¶£‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶™‡¶∞‡ßç‡¶Ø‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®',
    emergencyNote: '‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡¶∞ ‡¶≤‡¶ï‡ßç‡¶∑‡¶£‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶≠‡¶¨ ‡¶ï‡¶∞‡ßá‡¶®, ‡¶Ö‡¶¨‡¶ø‡¶≤‡¶Æ‡ßç‡¶¨‡ßá ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ‡¶Ø‡¶º ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§'
  }
};

const TriageResults = ({ data, language, onFindServices, onBack }: TriageResultsProps) => {
  const t = translations[language];
  
  // Simple risk assessment logic
  const calculateRiskLevel = () => {
    if (!data) return 'low';
    
    const { symptoms, painLevel, urgency } = data;
    
    if (urgency === 'high' || painLevel >= 8 || symptoms.includes('chest_pain') || symptoms.includes('breathing')) {
      return 'high';
    } else if (urgency === 'medium' || painLevel >= 5 || symptoms.length >= 3) {
      return 'medium';
    } else {
      return 'low';
    }
  };

  const riskLevel = calculateRiskLevel();
  const riskColors = {
    low: '#28a745',
    medium: '#ffc107',
    high: '#dc3545'
  };

  return (
    <div className="triage-results">
      <div className="results-header">
        <h2>{t.title}</h2>
      </div>

      <div className="risk-assessment">
        <div className="risk-level-card" style={{ borderColor: riskColors[riskLevel] }}>
          <h3>{t.riskLevel}</h3>
          <div 
            className={`risk-indicator risk-${riskLevel}`}
            style={{ backgroundColor: riskColors[riskLevel] }}
          >
            {t[riskLevel as keyof typeof t]}
          </div>
          <p className="risk-description">
            {t[`${riskLevel}RiskDesc` as keyof typeof t]}
          </p>
        </div>
      </div>

      <div className="recommendations-section">
        <h3>{t.recommendations}</h3>
        
        <div className="symptoms-summary">
          <h4>Your Reported Symptoms:</h4>
          <div className="symptoms-list">
            {data?.symptoms?.map((symptom: string) => (
              <span key={symptom} className="symptom-tag">
                {symptom.replace('_', ' ')}
              </span>
            )) || 'None reported'}
          </div>
          {data?.painLevel && (
            <p>Pain Level: {data.painLevel}/10</p>
          )}
        </div>

        <div className="health-tips">
          <h4>{t.generalTips}</h4>
          <ul>
            <li>{t.tip1}</li>
            <li>{t.tip2}</li>
            <li>{t.tip3}</li>
          </ul>
        </div>

        <div className="emergency-notice">
          <p>‚ö†Ô∏è {t.emergencyNote}</p>
        </div>
      </div>

      <div className="action-buttons">
        <button className="primary-btn" onClick={onFindServices}>
          üè• {t.findServices}
        </button>
        <button className="secondary-btn" onClick={onBack}>
          ‚Üê {t.back}
        </button>
      </div>
    </div>
  );
};

export default TriageResults;